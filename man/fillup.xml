<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<refentry>
  <refentryinfo>
    <date>2014-10-26</date>
  </refentryinfo>
  <refmeta>
    <refentrytitle>fillup</refentrytitle>
    <manvolnum>8</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>
      <application>fillup</application>
    </refname>
    <refpurpose>
        SUSE tool for merging config files.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>fillup</command>
      <arg choice="opt">options</arg>
      <arg choice="plain">basefile</arg>
      <arg choice="plain">addfile</arg>
      <arg choice="plain">outfile</arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>fillup</command>
      <arg choice="opt">options</arg>
      <arg choice="plain">basefile</arg>
      <arg choice="plain">addfile</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>DESCRIPTION</title>
    <para><command>fillup</command> merges input files into one resulting output file. Usually, each file is a configuration file.</para>
    <para><command>fillup</command> merges files which are holding variables (ie configuration or environment variables). A variable is defined by an entity composed of a preceding comment, a variable name, an assignment delim‚Äê
                iter, and a related variable value. A variable is determined by its variable name.</para>
    <para>A preceding comment is optional. An assignment delimiter may be optional, but if there is an assignment delimiter, a variable name must precede it. The last entity may be composed only of a comment.</para>
    <para>Only if variables are included in both input files (basefile and addfile) fillup has to select one of the variables. Otherwise, if variables are included only in one of the input files they are added
                to the resulting output file (with the exception of the <replaceable class="parameter">-i|--ignoreDefinites</replaceable> option).</para>
    <para>The functionality is now controlled by a parameter which determines whether a variable included both in the basefile and in the addfile is taken from the former or from the latter. Furthermore, a
                parameter controls whether the variable is removed from a copy of the basefile.</para>
    <para>To keep the fillup v1.04 functionality, the outputfile parameter can be omitted -- this means the resulting output file is named exactly like the first input file name (basefile = outputfile).</para>
    <para>If variables should be removed from the basefile, the basefile is not touched, but the result is written to basefile.new.</para>
    <para>If basefile includes a header as part of the first variable this header is preserved only for the outputfile if after the header an empty line follows.</para>
    <para>Starting with version 1.20 handling of metadata for /etc/sysconfig files is included. Metadata is part of preceding comment, each metadata line begins with double hash ("##"). A metadata line contains a pair keyword:value. The value itself can be described on several lines, each beginning with double hash and the optional keyword.</para>
  </refsect1>
  <refsect1>
    <title>OPTIONS</title>
    <variablelist>
      <varlistentry>
        <term>-h, --help</term>
        <listitem>
          <para>
            Shows help information on commandline and exits.
        </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-e, --ignoreeof</term>
        <listitem>
          <para>
            end of file allowed anywhere
        </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-i, --ignoreDefinites</term>
        <listitem>
          <para>
            dont write variables to the output if they are only defined in basefile
        </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-q, --quiet</term>
        <listitem>
          <para>no output to screen</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-s, --suppress</term>
        <listitem>
          <para>suppress output of comments</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-t, --trailing</term>
        <listitem>
          <para>save trailing comments at end of file</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-v, --verbose</term>
        <listitem>
          <para>maximum output to screen</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-V, --version</term>
        <listitem>
          <para>print fillup version and exit</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-nometadata, --nometadata</term>
        <listitem>
          <para>no metadata information merged: keep fillup 1.10 functionalty</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-f | --forbidden file</term>
        <listitem>
          <para>use file to forbid changes for given variables</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-c | --char char</term>
        <listitem>
          <para>use char as comment marker</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-l | --quote char</term>
        <listitem>
          <para>use char as quoting marker</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-d | --delim char</term>
        <listitem>
          <para>use char as delimiter</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-n, --num</term>
        <listitem>
          <para>check for max comment lines</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-p, --put</term>
        <listitem>
          <para>check for substitution (put)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-g, --get</term>
        <listitem>
          <para>check for extraction (get)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-m, --maintain</term>
        <listitem>
          <para>check for maintaining the basefile</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-x, --exchange</term>
        <listitem>
          <para>check for exchange</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-r, --remove</term>
        <listitem>
          <para>check for removal within basefile</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>-a, --arguments</term>
        <listitem>
          <para>check for passed arguments</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>
  <refsect1>
    <title>USAGE</title>
    <para><command>fillup</command> -m "/etc/rc.config" "my.config" "/etc/rc.config"</para>
    <para>All variables of "/etc/rc.config" are passed to the resulting output file "/etc/rc.config".  Variables defined only within "my.config" are appended.</para>
    <para><command>fillup</command> -exchange "/etc/rc.config" "my.config"</para>
    <para>Only variables of "/etc/rc.config" that are not also defined within "my.config" are passed to the resulting output file "/etc/rc.config".  All variables of "my.config" are appended.</para>
    <para><command>fillup</command> -m -r "/etc/rc.config" "my.config" "/etc/rc.config"</para>
    <para>All  variables  of  "/etc/rc.config" are passed to the resulting output file "/etc/rc.config".  Variables defined only within "my.config" are appended.  The additional parameter '-r' removes variables
        defined more than once from a copy of "/etc/rc.config".  "/etc/rc.config" isn't touched and the result of the removal is written to "/etc/rc.config.new".</para>
    <para><command>fillup</command> -i "/etc/rc.config" "my.config"</para>
    <para>This is a filter functionality. Variables of "/etc/rc.config" are only passed to the resulting output file "/etc/rc.config" if they are defined in both input files.  Because  "my.config"  is  normally
        only a list of variable names from "/etc/rc.config", this is named filter functionality.  Additionally variables of "my.config" are appended if they are defined only in "my.config".</para>
  </refsect1>
  <refsect1>
    <title>COPYRIGHT</title>
    <para>fillup is copyright 2014 SUSE LINUX Products GmbH, Nuernberg, Germany.</para>
  </refsect1>
  <refsect1>
    <title>AUTHOR</title>
    <para>
      <author>
        <firstname>Martin Scherbaum</firstname>
        <surname>maddin@suse.de</surname>
        <contrib>Original author (1996)</contrib>
      </author>
    </para>
    <para>
      <author>
        <firstname>Joerg Dippel</firstname>
        <surname>jd@suse.de</surname>
        <contrib>Further development (1998 - 2003)</contrib>
      </author>
    </para>
  </refsect1>
</refentry>
